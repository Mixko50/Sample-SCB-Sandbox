{"version":3,"sources":["pages/Callback.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Callback","link","useHistory","className","onClick","push","Home","useState","rawQr","setRawQr","createQr","a","axios","get","getRawQr","data","qrRawData","test","setInterval","request","payeeName","clear","clearInterval","length","src","alt","require","config","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAsBeA,EAlBE,WACb,IAAMC,EAAOC,cAEb,OACI,sBAAKC,UAAU,MAAf,UACI,8CACA,qBACIA,UAAU,SACVC,QAAS,WACLH,EAAKI,KAAK,MAHlB,yB,kDCuCGC,EA5CF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAETR,EAAOC,cAEPQ,EAAQ,uCAAG,4BAAAC,EAAA,sEACPC,IAAMC,IAAI,iDADH,uBAEUD,IAAMC,IACzB,iDAHS,OAEPC,EAFO,OAKbL,EAASK,EAASC,KAAKA,KAAKC,WALf,2CAAH,qDAQRC,EAAOC,YAAW,sBAAC,sBAAAP,EAAA,+EAESC,IAAMC,IAC5B,8CAHa,kBAKDE,KAAKI,QAAQC,UALZ,wBAMbnB,EAAKI,KAAK,aANG,SAOWO,IAAMC,IAC1B,6CARS,QAUgB,IAVhB,OAUCE,KAAKM,OACfC,cAAcL,GAXL,oHAetB,KAEH,OACI,sBAAKd,UAAU,MAAf,UACI,qBAAKA,UAAU,SAASC,QAASM,EAAjC,qBAGCF,EAAMe,OAAS,EACZ,qBACIC,IAAG,oEAA+DhB,GAClEiB,IAAI,WAER,SCzChBC,EAAQ,IAAUC,SAqBHC,MAnBf,WACI,OACI,qBAAKzB,UAAU,MAAf,SACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACI,cAAC,EAAD,gBCHbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.8de89eb9.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"../styles/Home.css\";\n\nconst Callback = () => {\n    const link = useHistory();\n\n    return (\n        <div className=\"box\">\n            <h1>Successfully</h1>\n            <div\n                className=\"button\"\n                onClick={() => {\n                    link.push(\"/\");\n                }}\n            >\n                Go back\n            </div>\n        </div>\n    );\n};\n\nexport default Callback;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"../styles/Home.css\";\nimport { useHistory } from \"react-router\";\n\nconst Home = () => {\n    const [rawQr, setRawQr] = useState(\"\");\n    const link = useHistory();\n\n    const createQr = async () => {\n        await axios.get(\"https://scb-sandbox-api.mixkoap.com/get-token\");\n        const getRawQr = await axios.get(\n            \"https://scb-sandbox-api.mixkoap.com/create-qr\"\n        );\n        setRawQr(getRawQr.data.data.qrRawData);\n    };\n\n    const test = setInterval(async () => {\n        try {\n            const checkStatus = await axios.get(\n                \"https://scb-sandbox-api.mixkoap.com/status\"\n            );\n            if (checkStatus.data.request.payeeName) {\n                link.push(\"/callback\");\n                const clearData = await axios.get(\n                    \"https://scb-sandbox-api.mixkoap.com/clear\"\n                );\n                if (clearData.data.clear === true) {\n                    clearInterval(test);\n                }\n            }\n        } catch {}\n    }, 1000);\n\n    return (\n        <div className=\"box\">\n            <div className=\"button\" onClick={createQr}>\n                Pay now\n            </div>\n            {rawQr.length > 1 ? (\n                <img\n                    src={`https://chart.googleapis.com/chart?cht=qr&chs=300x300&chl=${rawQr}`}\n                    alt=\"QRCODE\"\n                />\n            ) : null}\n        </div>\n    );\n};\n\nexport default Home;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Callback from \"./pages/Callback\";\nimport Home from \"./pages/Home\";\nrequire(\"dotenv\").config();\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                        <Route path=\"/callback\">\n                            <Callback />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}